on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ACR_NAME: showcaseacrbm123
  RESOURCE_GROUP: AzureShowcase-RG
  AKS_CLUSTER_NAME: showcase-aks-cluster

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    outputs:
      identityClientId: ${{ steps.deploy-bicep.outputs.identityClientId }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Bicep Infrastructure
        id: deploy-bicep
        run: |
          deployment_output=$(az deployment sub create --location northeurope --template-file ./infra/main.bicep --parameters ./infra/main.bicepparam -o json)
          clientId=$(echo $deployment_output | jq -r '.properties.outputs.identityClientId.value')
          echo "identityClientId=$clientId" >> $GITHUB_OUTPUT

  build-and-deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set AKS context
        run: az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }} --overwrite-existing
      - name: Log in to ACR
        run: az acr login --name ${{ env.ACR_NAME }}
      - name: Build and Push Images
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/orderservice:${{ github.sha }} -f ./src/OrderService/Dockerfile .
          docker push ${{ env.ACR_NAME }}.azurecr.io/orderservice:${{ github.sha }}
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/inventoryservice:${{ github.sha }} -f ./src/InventoryService/Dockerfile .
          docker push ${{ env.ACR_NAME }}.azurecr.io/inventoryservice:${{ github.sha }}
      - name: Replace placeholders
        run: |
          sed -i "s|__ACR_NAME__|${{ env.ACR_NAME }}|g" ./k8s/*.yml
          sed -i "s|__IMAGE_TAG__|${{ github.sha }}|g" ./k8s/*.yml
          sed -i "s|__IDENTITY_CLIENT_ID__|${{ needs.deploy-infra.outputs.identityClientId }}|g" ./k8s/secret-provider.yml
      - name: Deploy to AKS
        run: kubectl apply -f ./k8s/